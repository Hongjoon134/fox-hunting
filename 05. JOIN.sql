-- CHAPTER 05. JOIN
-- JOIN : 두개 이상의 테이블에서 데이터를 가져오는 방법
-- 두 테이블의 공통된 부분을 WHERE절을 이용해서 같다고 (=) 표시해주기!!
SELECT *
  FROM EMPLOYEES, DEPARTMENTS 
 WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ; 
 -- 조인 조건 : 두개의 테이블을 연결시켜 주는 조건
 
  
-- CROSS JOIN: 데이터가 반복됨을 상관하지 않고 모든 가능성을 생각한 모든 경우의 수(주의!!)
-- JOIN 조건절 : 두개 이상의 테이블에 관계를 설정해줘서 의미가 있는 데이터를 생성함

-- 직원 ID가 100인 직원의 부서 이름, FIRST_NAME을 출력시켜 주세요

SELECT DEPARTMENT_NAME, FIRST_NAME
  FROM EMPLOYEES, DEPARTMENTS
 WHERE EMPLOYEE_ID = 100 
       AND EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;
       
SELECT *
  FROM DEPARTMENTS ;
  
-- 30번 부서에서 근무하는 직원의 FIRST_NAME, 부서명, JOB_ID를 출력시켜주세요

SELECT EMPLOYEES.DEPARTMENT_ID, DEPARTMENT_NAME, FIRST_NAME, JOB_ID
  FROM EMPLOYEES, DEPARTMENTS
 WHERE EMPLOYEES.DEPARTMENT_ID = 30
       AND EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ;

-- COMMISSION을 받는 직원의 FIRST_NAME, 부서명 출력
SELECT FIRST_NAME, DEPARTMENT_NAME, COMMISSION_PCT
  FROM EMPLOYEES, DEPARTMENTS
 WHERE COMMISSION_PCT IS NOT NULL 
       AND EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ;

-- 지역번호(LOCATION_ID)가 2500에서 근무하는 직원의 FIRST_NAME,JOB_ID, 부서명 출력
SELECT LOCATION_ID, FIRST_NAME, JOB_ID, DEPARTMENT_NAME
  FROM EMPLOYEES E, DEPARTMENTS D
 WHERE LOCATION_ID = 2500
       AND EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ;

-- 각 부서의 매니저(관리자)의 ID, 급여, JOB_ID를 출력하기
SELECT *
  FROM EMPLOYEES ;

SELECT *
  FROM DEPARTMENTS ;
  
SELECT FIRST_NAME, EMPLOYEE_ID, SALARY, JOB_ID, DEPARTMENT_NAME, MANAGER_ID
  FROM EMPLOYEES, DEPARTMENTS
 WHERE EMPLOYEES.EMPLOYEE_ID = DEPARTMENTS.MANAGER_ID ;

-- 각 부서의 위치한 도시와 나라 이름을 출력하기 
-- (3개 테이블 이용: DEPARTMENT, LOCATION, COUNTRIES)
SELECT *
  FROM LOCATIONS ;

SELECT  DEPARTMENT_NAME, CITY, COUNTRY_NAME
  FROM DEPARTMENTS D, LOCATIONS L, COUNTRIES C
 WHERE D.LOCATION_ID = L.LOCATION_ID
       AND C.COUNTRY_ID = L.COUNTRY_ID ;
       
-- 필요한 조인 조건의 개수 : 테이블 개수 -1



